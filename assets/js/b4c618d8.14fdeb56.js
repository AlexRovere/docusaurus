"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[757],{4619:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"documentation/G\xe9n\xe9ral/Git","title":"Git","description":"Git et Versionning","source":"@site/docs/documentation/G\xe9n\xe9ral/Git.md","sourceDirName":"documentation/G\xe9n\xe9ral","slug":"/documentation/G\xe9n\xe9ral/Git","permalink":"/docusaurus/docs/documentation/G\xe9n\xe9ral/Git","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"description":"Git et Versionning"},"sidebar":"tutorialSidebar","previous":{"title":"Gestion de projet","permalink":"/docusaurus/docs/documentation/G\xe9n\xe9ral/Gestion_de_projet"},"next":{"title":"JWT","permalink":"/docusaurus/docs/documentation/G\xe9n\xe9ral/JWT"}}');var i=r(4848),l=r(8453);const a={description:"Git et Versionning"},o="Git",c={},t=[{value:"Workflow Git en \xe9quipe (ex. avec 3 d\xe9veloppeurs)",id:"workflow-git-en-\xe9quipe-ex-avec-3-d\xe9veloppeurs",level:2},{value:"\xc9tapes du travail collaboratif",id:"\xe9tapes-du-travail-collaboratif",level:2},{value:"R\xe8gles \xe0 respecter",id:"r\xe8gles-\xe0-respecter",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"git",children:"Git"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"workflow-git-en-\xe9quipe-ex-avec-3-d\xe9veloppeurs",children:"Workflow Git en \xe9quipe (ex. avec 3 d\xe9veloppeurs)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Branche principale"})," : main"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Branches personnelles"})," : nom-dev1, nom-dev2, nom-dev3"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\xe9tapes-du-travail-collaboratif",children:"\xc9tapes du travail collaboratif"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cloner le projet (si premi\xe8re fois)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone URL_DU_REPO\n\ncd NOM_DU_REPO\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cr\xe9er et basculer sur sa branche personnelle"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git checkout -b nom-devX main\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"D\xe9velopper et enregistrer les changements"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git add .\n\ngit commit -m "Description des modifications"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mettre \xe0 jour sa branche avec main (\xe9viter les conflits)\n(par s\xe9curit\xe9, on peut aussi pusher sa branche avant)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git checkout main \u2190 on se met sur main\n\ngit pull origin main \u2190 on r\xe9cup\xe8re le main en ligne \xe0 jour\n\ngit checkout nom-devX \u2190 on bascule sur notre branche\n\ngit merge main\xa0 # Ou git rebase main (pour un historique plus propre) \u2190 on merge notre branche avec la main (en local)\n"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"on r\xe9cup\xe8re main en local"}),"\n",(0,i.jsx)(n.li,{children:"on merge sur notre branche en local"}),"\n",(0,i.jsx)(n.li,{children:"on envoie notre branche locale \xe0 jour sur origin"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Envoyer ses changements sur le d\xe9p\xf4t distant"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git push origin nom-devX \u2190 on envoie notre branche \xe0 jour en ligne\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Cr\xe9er une Pull Request (PR) sur GitHub"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Aller sur GitHub"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Cr\xe9er une PR pour fusionner nom-devX dans main"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Un autre membre valide la PR :"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Fusionner la branche et mettre \xe0 jour main (r\xe9alis\xe9e par le membre qui valide)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git checkout main \u2190 on se place sur main\n\ngit merge nom-devX \u2190 on merge avec nom-devX\n\ngit push origin main \u2190 on envoie main en ligne\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Supprimer la branche locale (si elle n'est plus n\xe9cessaire)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git branch -d nom-devX\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"r\xe8gles-\xe0-respecter",children:"R\xe8gles \xe0 respecter"}),"\n",(0,i.jsx)(n.p,{children:"\u2705 Toujours travailler sur une branche d\xe9di\xe9e"}),"\n",(0,i.jsx)(n.p,{children:"\u2705 Faire des commits clairs et r\xe9guliers"}),"\n",(0,i.jsx)(n.p,{children:"\u2705 R\xe9cup\xe9rer les mises \xe0 jour de main avant de pousser ses modifications"}),"\n",(0,i.jsx)(n.p,{children:"\u2705 Toujours cr\xe9er une PR et faire relire son code"})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const i={},l=s.createContext(i);function a(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);